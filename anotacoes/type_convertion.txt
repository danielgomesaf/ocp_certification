Usamos conversão de tipo para saber se um número é positivo ou negativo. Isso pode ajudar em casos em que armazenamos um int em um byte,
por exemplo.

Regras para converter decimal para binário:

1 - Divida o número por 2 e anote o resto;
2 - Divida o quociente obtido por 2 e anote o resto;
3 - Repita o mesmo processo até obter 0 como quociente;
4 - Anote os valores de todos os restos começando de baixo para cima. Essa será a resposta.

Ex:

public class Test {
    public static void main(String[] args) {
        byte b1 = (byte) (127 + 21);
        System.out.println(b1);
    }
}

Qual seria o resultado do código acima:

1 - Erro de compilação
2 - -108
3 - 128
4 - 148

Para encontrarmos esse resultado, precisamos primeiro calcular a soma dos valores entre parêntes, que resultará em uma variável numérica
do tipo int.

(127 + 21) = 148;

Em seguida, para que possamos converter para o tipo byte, temos primeiro que converter esse resultado de 148 em binário.

Convertendo o número usando a fórmula declarada acima:

148 / 2 = 74 (resto 0)

74 / 2 = 37 (resto 0)

37 / 2 = 18 (resto 1)

18 / 2 = 9 (resto 0)

9 / 2 = 4 (resto 1)

4 / 2 = 0 (resto 0)

2 / 2 = 1 (resto 0)

1 / 2 = 0 (resto 1)

ordenando de baixo pra cima:

= 10010100

Como int tem 32 bits, adicionamos 0 à esquerda para representar esses bits:

= 00000000 00000000 00000000 10010100

O número binário acima é positivo, uma vez que o seu bit mais à esquerda é 0.

Em seguida o código converte esse resultado em inteiro para uma variável byte, ou seja, com 8 bits:

= 10010100

Agora temos um número negativo, uma vez que o seu bit mais à esquerda é 1.

A única opção dada acima que é um número negativo é -108.